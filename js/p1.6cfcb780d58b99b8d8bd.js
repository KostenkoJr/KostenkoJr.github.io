(()=>{"use strict";var e={208:(e,t,n)=>{n.r(t),n.d(t,{AbortError:()=>r,DefaultHttpClient:()=>D,HttpClient:()=>u,HttpError:()=>o,HttpResponse:()=>d,HttpTransportType:()=>W,HubConnection:()=>j,HubConnectionBuilder:()=>Z,HubConnectionState:()=>M,JsonHubProtocol:()=>V,LogLevel:()=>g,MessageType:()=>H,NullLogger:()=>p,Subject:()=>A,TimeoutError:()=>s,TransferFormat:()=>q,VERSION:()=>_});class o extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class s extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class r extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class i extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class a extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class c extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class l extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class h extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class d{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class u{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}var g;!function(e){e[e.Trace=0]="Trace",e[e.Debug=1]="Debug",e[e.Information=2]="Information",e[e.Warning=3]="Warning",e[e.Error=4]="Error",e[e.Critical=5]="Critical",e[e.None=6]="None"}(g||(g={}));class p{constructor(){}log(e,t){}}p.instance=new p;const _="6.0.2";class f{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class m{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&void 0===window.document}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function v(e,t){let n="";return w(e)?(n=`Binary data of length ${e.byteLength}`,t&&(n+=`. Content: '${function(e){const t=new Uint8Array(e);let n="";return t.forEach((e=>{n+=`0x${e<16?"0":""}${e.toString(16)} `})),n.substr(0,n.length-1)}(e)}'`)):"string"==typeof e&&(n=`String data of length ${e.length}`,t&&(n+=`. Content: '${e}'`)),n}function w(e){return e&&"undefined"!=typeof ArrayBuffer&&(e instanceof ArrayBuffer||e.constructor&&"ArrayBuffer"===e.constructor.name)}async function y(e,t,n,o,s,r,i){let a={};if(s){const e=await s();e&&(a={Authorization:`Bearer ${e}`})}const[c,l]=C();a[c]=l,e.log(g.Trace,`(${t} transport) sending data. ${v(r,i.logMessageContent)}.`);const h=w(r)?"arraybuffer":"text",d=await n.post(o,{content:r,headers:{...a,...i.headers},responseType:h,timeout:i.timeout,withCredentials:i.withCredentials});e.log(g.Trace,`(${t} transport) request complete. Response status: ${d.statusCode}.`)}class b{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch((e=>{}))}}class S{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${g[e]}: ${t}`;switch(e){case g.Critical:case g.Error:this.out.error(n);break;case g.Warning:this.out.warn(n);break;case g.Information:this.out.info(n);break;default:this.out.log(n)}}}}function C(){let e="X-SignalR-User-Agent";return m.isNode&&(e="User-Agent"),[e,k(_,E(),m.isNode?"NodeJS":"Browser",P())]}function k(e,t,n,o){let s="Microsoft SignalR/";const r=e.split(".");return s+=`${r[0]}.${r[1]}`,s+=` (${e}; `,s+=t&&""!==t?`${t}; `:"Unknown OS; ",s+=`${n}`,s+=o?`; ${o}`:"; Unknown Runtime Version",s+=")",s}function E(){if(!m.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function P(){if(m.isNode)return process.versions.node}function T(e){return e.stack?e.stack:e.message?e.message:`${e}`}class I extends u{constructor(e){if(super(),this._logger=e,"undefined"==typeof fetch){const e=require;this._jar=new(e("tough-cookie").CookieJar),this._fetchType=e("node-fetch"),this._fetchType=e("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n.g)return n.g;throw new Error("could not find global")}());if("undefined"==typeof AbortController){const e=require;this._abortControllerType=e("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new r;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new r});let i,a=null;if(e.timeout){const o=e.timeout;a=setTimeout((()=>{t.abort(),this._logger.log(g.Warning,"Timeout from HTTP request."),n=new s}),o)}try{i=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(e){if(n)throw n;throw this._logger.log(g.Warning,`Error from HTTP request. ${e}.`),e}finally{a&&clearTimeout(a),e.abortSignal&&(e.abortSignal.onabort=null)}if(!i.ok){const e=await x(i,"text");throw new o(e||i.statusText,i.status)}const c=x(i,e.responseType),l=await c;return new d(i.status,i.statusText,l)}getCookieString(e){let t="";return m.isNode&&this._jar&&this._jar.getCookies(e,((e,n)=>t=n.join("; "))),t}}function x(e,t){let n;switch(t){case"arraybuffer":n=e.arrayBuffer();break;case"text":default:n=e.text();break;case"blob":case"document":case"json":throw new Error(`${t} is not supported.`)}return n}class $ extends u{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new r):e.method?e.url?new Promise(((t,n)=>{const i=new XMLHttpRequest;i.open(e.method,e.url,!0),i.withCredentials=void 0===e.withCredentials||e.withCredentials,i.setRequestHeader("X-Requested-With","XMLHttpRequest"),i.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const a=e.headers;a&&Object.keys(a).forEach((e=>{i.setRequestHeader(e,a[e])})),e.responseType&&(i.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{i.abort(),n(new r)}),e.timeout&&(i.timeout=e.timeout),i.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),i.status>=200&&i.status<300?t(new d(i.status,i.statusText,i.response||i.responseText)):n(new o(i.response||i.responseText||i.statusText,i.status))},i.onerror=()=>{this._logger.log(g.Warning,`Error from HTTP request. ${i.status}: ${i.statusText}.`),n(new o(i.statusText,i.status))},i.ontimeout=()=>{this._logger.log(g.Warning,"Timeout from HTTP request."),n(new s)},i.send(e.content||"")})):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class D extends u{constructor(e){if(super(),"undefined"!=typeof fetch||m.isNode)this._httpClient=new I(e);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this._httpClient=new $(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new r):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class R{static write(e){return`${e}${R.RecordSeparator}`}static parse(e){if(e[e.length-1]!==R.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(R.RecordSeparator);return t.pop(),t}}R.RecordSeparatorCode=30,R.RecordSeparator=String.fromCharCode(R.RecordSeparatorCode);class L{writeHandshakeRequest(e){return R.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(w(e)){const o=new Uint8Array(e),s=o.indexOf(R.RecordSeparatorCode);if(-1===s)throw new Error("Message is incomplete.");const r=s+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(o.slice(0,r))),n=o.byteLength>r?o.slice(r).buffer:null}else{const o=e,s=o.indexOf(R.RecordSeparator);if(-1===s)throw new Error("Message is incomplete.");const r=s+1;t=o.substring(0,r),n=o.length>r?o.substring(r):null}const o=R.parse(t),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var H,M;!function(e){e[e.Invocation=1]="Invocation",e[e.StreamItem=2]="StreamItem",e[e.Completion=3]="Completion",e[e.StreamInvocation=4]="StreamInvocation",e[e.CancelInvocation=5]="CancelInvocation",e[e.Ping=6]="Ping",e[e.Close=7]="Close"}(H||(H={}));class A{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new b(this,e)}}!function(e){e.Disconnected="Disconnected",e.Connecting="Connecting",e.Connected="Connected",e.Disconnecting="Disconnecting",e.Reconnecting="Reconnecting"}(M||(M={}));class j{constructor(e,t,n,o){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(g.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},f.isRequired(e,"connection"),f.isRequired(t,"logger"),f.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new L,this.connection.onreceive=e=>this._processIncomingData(e),this.connection.onclose=e=>this._connectionClosed(e),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=M.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:H.Ping})}static create(e,t,n,o){return new j(e,t,n,o)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==M.Disconnected&&this._connectionState!==M.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==M.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=M.Connecting,this._logger.log(g.Debug,"Starting HubConnection.");try{await this._startInternal(),m.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=M.Connected,this._connectionStarted=!0,this._logger.log(g.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=M.Disconnected,this._logger.log(g.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise(((e,t)=>{this._handshakeResolver=e,this._handshakeRejecter=t}));await this.connection.start(this._protocol.transferFormat);try{const t={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(g.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(g.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError}catch(e){throw this._logger.log(g.Debug,`Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(e),e}}async stop(){const e=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch(e){}}_stopInternal(e){return this._connectionState===M.Disconnected?(this._logger.log(g.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===M.Disconnecting?(this._logger.log(g.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=M.Disconnecting,this._logger.log(g.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(g.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,o);let r;const i=new A;return i.cancelCallback=()=>{const e=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],r.then((()=>this._sendWithProtocol(e)))},this._callbacks[s.invocationId]=(e,t)=>{t?i.error(t):e&&(e.type===H.Completion?e.error?i.error(new Error(e.error)):i.complete():i.next(e.item))},r=this._sendWithProtocol(s).catch((e=>{i.error(e),delete this._callbacks[s.invocationId]})),this._launchStreams(n,r),i}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,s),s}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,o);return new Promise(((e,t)=>{this._callbacks[s.invocationId]=(n,o)=>{o?t(o):n&&(n.type===H.Completion?n.error?t(new Error(n.error)):e(n.result):t(new Error(`Unexpected message type: ${n.type}`)))};const o=this._sendWithProtocol(s).catch((e=>{t(e),delete this._callbacks[s.invocationId]}));this._launchStreams(n,o)}))}on(e,t){e&&t&&(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);-1!==o&&(n.splice(o,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const e of t)switch(e.type){case H.Invocation:this._invokeClientMethod(e);break;case H.StreamItem:case H.Completion:{const t=this._callbacks[e.invocationId];if(t){e.type===H.Completion&&delete this._callbacks[e.invocationId];try{t(e)}catch(e){this._logger.log(g.Error,`Stream callback threw error: ${T(e)}`)}}break}case H.Ping:break;case H.Close:{this._logger.log(g.Information,"Close message received from server.");const t=e.error?new Error("Server returned an error on close: "+e.error):void 0;!0===e.allowReconnect?this.connection.stop(t):this._stopPromise=this._stopInternal(t);break}default:this._logger.log(g.Warning,`Invalid message type: ${e.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(e){const t="Error parsing handshake response: "+e;this._logger.log(g.Error,t);const n=new Error(t);throw this._handshakeRejecter(n),n}if(t.error){const e="Server returned handshake error: "+t.error;this._logger.log(g.Error,e);const n=new Error(e);throw this._handshakeRejecter(n),n}return this._logger.log(g.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let e=this._nextKeepAlive-(new Date).getTime();e<0&&(e=0),this._pingServerHandle=setTimeout((async()=>{if(this._connectionState===M.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}}),e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){const t=this._methods[e.target.toLowerCase()];if(t){try{t.forEach((t=>t.apply(this,e.arguments)))}catch(t){this._logger.log(g.Error,`A callback for the method ${e.target.toLowerCase()} threw error '${t}'.`)}if(e.invocationId){const e="Server requested a response, which is not supported in this version of the client.";this._logger.log(g.Error,e),this._stopPromise=this._stopInternal(new Error(e))}}else this._logger.log(g.Warning,`No client method with the name '${e.target}' found.`)}_connectionClosed(e){this._logger.log(g.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===M.Disconnecting?this._completeClose(e):this._connectionState===M.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===M.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=M.Disconnected,this._connectionStarted=!1,m.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(g.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,o=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),s=this._getNextRetryDelay(n++,0,o);if(null===s)return this._logger.log(g.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this._completeClose(e);if(this._connectionState=M.Reconnecting,e?this._logger.log(g.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(g.Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(g.Error,`An onreconnecting callback called with error '${e}' threw error '${t}'.`)}if(this._connectionState!==M.Reconnecting)return void this._logger.log(g.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==s;){if(this._logger.log(g.Information,`Reconnect attempt number ${n} will start in ${s} ms.`),await new Promise((e=>{this._reconnectDelayHandle=setTimeout(e,s)})),this._reconnectDelayHandle=void 0,this._connectionState!==M.Reconnecting)return void this._logger.log(g.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this._startInternal(),this._connectionState=M.Connected,this._logger.log(g.Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach((e=>e.apply(this,[this.connection.connectionId])))}catch(e){this._logger.log(g.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`)}return}catch(e){if(this._logger.log(g.Information,`Reconnect attempt failed because of error '${e}'.`),this._connectionState!==M.Reconnecting)return this._logger.log(g.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this._connectionState===M.Disconnecting&&this._completeClose());o=e instanceof Error?e:new Error(e.toString()),s=this._getNextRetryDelay(n++,Date.now()-t,o)}}this._logger.log(g.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(n){return this._logger.log(g.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${n}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach((n=>{const o=t[n];try{o(null,e)}catch(t){this._logger.log(g.Error,`Stream 'error' callback called with '${e}' threw error: ${T(t)}`)}}))}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return 0!==o.length?{arguments:t,streamIds:o,target:e,type:H.Invocation}:{arguments:t,target:e,type:H.Invocation};{const n=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:n.toString(),streamIds:o,target:e,type:H.Invocation}:{arguments:t,invocationId:n.toString(),target:e,type:H.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n))))},error:e=>{let o;o=e instanceof Error?e.message:e&&e.toString?e.toString():"Unknown error",t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n,o))))},next:e=>{t=t.then((()=>this._sendWithProtocol(this._createStreamItemMessage(n,e))))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const s=e[o];if(this._isObservable(s)){const r=this._invocationId;this._invocationId++,t[r]=s,n.push(r.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:H.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:H.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:H.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:H.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:H.Completion}:{invocationId:e,result:n,type:H.Completion}}}const F=[0,2e3,1e4,3e4,null];class O{constructor(e){this._retryDelays=void 0!==e?[...e,null]:F}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class N{}var W,q;N.Authorization="Authorization",N.Cookie="Cookie",function(e){e[e.None=0]="None",e[e.WebSockets=1]="WebSockets",e[e.ServerSentEvents=2]="ServerSentEvents",e[e.LongPolling=4]="LongPolling"}(W||(W={})),function(e){e[e.Text=1]="Text",e[e.Binary=2]="Binary"}(q||(q={}));class B{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class U{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._pollAbort=new B,this._options=o,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,q,"transferFormat"),this._url=e,this._logger.log(g.Trace,"(LongPolling transport) Connecting."),t===q.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,s]=C(),r={[n]:s,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:r,timeout:1e5,withCredentials:this._options.withCredentials};t===q.Binary&&(i.responseType="arraybuffer");const a=await this._getAccessToken();this._updateHeaderToken(i,a);const c=`${e}&_=${Date.now()}`;this._logger.log(g.Trace,`(LongPolling transport) polling: ${c}.`);const l=await this._httpClient.get(c,i);200!==l.statusCode?(this._logger.log(g.Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this._closeError=new o(l.statusText||"",l.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){e.headers||(e.headers={}),t?e.headers[N.Authorization]=`Bearer ${t}`:e.headers[N.Authorization]&&delete e.headers[N.Authorization]}async _poll(e,t){try{for(;this._running;){const n=await this._getAccessToken();this._updateHeaderToken(t,n);try{const n=`${e}&_=${Date.now()}`;this._logger.log(g.Trace,`(LongPolling transport) polling: ${n}.`);const s=await this._httpClient.get(n,t);204===s.statusCode?(this._logger.log(g.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==s.statusCode?(this._logger.log(g.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),this._closeError=new o(s.statusText||"",s.statusCode),this._running=!1):s.content?(this._logger.log(g.Trace,`(LongPolling transport) data received. ${v(s.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(s.content)):this._logger.log(g.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this._running?e instanceof s?this._logger.log(g.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=e,this._running=!1):this._logger.log(g.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}}finally{this._logger.log(g.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?y(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(g.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(g.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=C();e[t]=n;const o={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},s=await this._getAccessToken();this._updateHeaderToken(o,s),await this._httpClient.delete(this._url,o),this._logger.log(g.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(g.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(g.Trace,e),this.onclose(this._closeError)}}}class z{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}async connect(e,t){if(f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,q,"transferFormat"),this._logger.log(g.Trace,"(SSE transport) Connecting."),this._url=e,this._accessTokenFactory){const t=await this._accessTokenFactory();t&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(t)}`)}return new Promise(((n,o)=>{let s,r=!1;if(t===q.Text){if(m.isBrowser||m.isWebWorker)s=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const t=this._httpClient.getCookieString(e),n={};n.Cookie=t;const[o,r]=C();n[o]=r,s=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...n,...this._options.headers}})}try{s.onmessage=e=>{if(this.onreceive)try{this._logger.log(g.Trace,`(SSE transport) data received. ${v(e.data,this._options.logMessageContent)}.`),this.onreceive(e.data)}catch(e){return void this._close(e)}},s.onerror=e=>{r?this._close():o(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},s.onopen=()=>{this._logger.log(g.Information,`SSE connected to ${this._url}`),this._eventSource=s,r=!0,n()}}catch(e){return void o(e)}}else o(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))}))}async send(e){return this._eventSource?y(this._logger,"SSE",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class G{constructor(e,t,n,o,s,r){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=r}async connect(e,t){if(f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,q,"transferFormat"),this._logger.log(g.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory){const t=await this._accessTokenFactory();t&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(t)}`)}return new Promise(((n,o)=>{let s;e=e.replace(/^http/,"ws");const r=this._httpClient.getCookieString(e);let i=!1;if(m.isNode){const t={},[n,o]=C();t[n]=o,r&&(t[N.Cookie]=`${r}`),s=new this._webSocketConstructor(e,void 0,{headers:{...t,...this._headers}})}s||(s=new this._webSocketConstructor(e)),t===q.Binary&&(s.binaryType="arraybuffer"),s.onopen=t=>{this._logger.log(g.Information,`WebSocket connected to ${e}.`),this._webSocket=s,i=!0,n()},s.onerror=e=>{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"There was an error with the transport",this._logger.log(g.Information,`(WebSockets transport) ${t}.`)},s.onmessage=e=>{if(this._logger.log(g.Trace,`(WebSockets transport) data received. ${v(e.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(e.data)}catch(e){return void this._close(e)}},s.onclose=e=>{if(i)this._close(e);else{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",o(new Error(t))}}}))}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(g.Trace,`(WebSockets transport) sending data. ${v(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(g.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class J{constructor(e,t={}){var n;if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,f.isRequired(e,"url"),this._logger=void 0===(n=t.logger)?new S(g.Information):null===n?p.instance:void 0!==n.log?n:new S(n),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let o=null,s=null;if(m.isNode){const e=require;o=e("ws"),s=e("eventsource")}m.isNode||"undefined"==typeof WebSocket||t.WebSocket?m.isNode&&!t.WebSocket&&o&&(t.WebSocket=o):t.WebSocket=WebSocket,m.isNode||"undefined"==typeof EventSource||t.EventSource?m.isNode&&!t.EventSource&&void 0!==s&&(t.EventSource=s):t.EventSource=EventSource,this._httpClient=t.httpClient||new D(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||q.Binary,f.isIn(e,q,"transferFormat"),this._logger.log(g.Debug,`Starting connection with transfer format '${q[e]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,"Disconnecting"===this._connectionState){const e="Failed to start the HttpConnection before stop() was called.";return this._logger.log(g.Error,e),await this._stopPromise,Promise.reject(new Error(e))}if("Connected"!==this._connectionState){const e="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(g.Error,e),Promise.reject(new Error(e))}this._connectionStarted=!0}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new X(this.transport)),this._sendQueue.send(e))}async stop(e){return"Disconnected"===this._connectionState?(this._logger.log(g.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(g.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState="Disconnecting",this._stopPromise=new Promise((e=>{this._stopPromiseResolver=e})),await this._stopInternal(e),void await this._stopPromise)}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch(e){}if(this.transport){try{await this.transport.stop()}catch(e){this._logger.log(g.Error,`HttpConnection.transport.stop() threw error '${e}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(g.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport!==W.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this._constructTransport(W.WebSockets),await this._startTransport(t,e)}else{let n=null,o=0;do{if(n=await this._getNegotiationResponse(t),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw new Error("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const e=n.accessToken;this._accessTokenFactory=()=>e}o++}while(n.url&&o<100);if(100===o&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof U&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(g.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(e){return this._logger.log(g.Error,"Failed to start the connection: "+e),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(e)}}async _getNegotiationResponse(e){const t={};if(this._accessTokenFactory){const e=await this._accessTokenFactory();e&&(t[N.Authorization]=`Bearer ${e}`)}const[n,s]=C();t[n]=s;const r=this._resolveNegotiateUrl(e);this._logger.log(g.Debug,`Sending negotiation request: ${r}.`);try{const e=await this._httpClient.post(r,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==e.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${e.statusCode}'`));const n=JSON.parse(e.content);return(!n.negotiateVersion||n.negotiateVersion<1)&&(n.connectionToken=n.connectionId),n}catch(e){let t="Failed to complete negotiation with the server: "+e;return e instanceof o&&404===e.statusCode&&(t+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(g.Error,t),Promise.reject(new l(t))}}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,o){let s=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t))return this._logger.log(g.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(s,o),void(this.connectionId=n.connectionId);const r=[],i=n.availableTransports||[];let a=n;for(const n of i){const i=this._resolveTransportOrError(n,t,o);if(i instanceof Error)r.push(`${n.transport} failed:`),r.push(i);else if(this._isITransport(i)){if(this.transport=i,!a){try{a=await this._getNegotiationResponse(e)}catch(e){return Promise.reject(e)}s=this._createConnectUrl(e,a.connectionToken)}try{return await this._startTransport(s,o),void(this.connectionId=a.connectionId)}catch(e){if(this._logger.log(g.Error,`Failed to start the transport '${n.transport}': ${e}`),a=void 0,r.push(new c(`${n.transport} failed: ${e}`,W[n.transport])),"Connecting"!==this._connectionState){const e="Failed to select transport before stop() was called.";return this._logger.log(g.Debug,e),Promise.reject(new Error(e))}}}}return r.length>0?Promise.reject(new h(`Unable to connect to the server with any of the available transports. ${r.join(" ")}`,r)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case W.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new G(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case W.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new z(this._httpClient,this._accessTokenFactory,this._logger,this._options);case W.LongPolling:return new U(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=e=>this._stopConnection(e),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const o=W[e.transport];if(null==o)return this._logger.log(g.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function(e,t){return!e||0!=(t&e)}(t,o))return this._logger.log(g.Debug,`Skipping transport '${W[o]}' because it was disabled by the client.`),new a(`'${W[o]}' is disabled by the client.`,o);if(!(e.transferFormats.map((e=>q[e])).indexOf(n)>=0))return this._logger.log(g.Debug,`Skipping transport '${W[o]}' because it does not support the requested transfer format '${q[n]}'.`),new Error(`'${W[o]}' does not support ${q[n]}.`);if(o===W.WebSockets&&!this._options.WebSocket||o===W.ServerSentEvents&&!this._options.EventSource)return this._logger.log(g.Debug,`Skipping transport '${W[o]}' because it is not supported in your environment.'`),new i(`'${W[o]}' is not supported in your environment.`,o);this._logger.log(g.Debug,`Selecting transport '${W[o]}'.`);try{return this._constructTransport(o)}catch(e){return e}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(g.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(g.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(g.Error,`Connection disconnected with error '${e}'.`):this._logger.log(g.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch((e=>{this._logger.log(g.Error,`TransportSendQueue.stop() threw error '${e}'.`)})),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(g.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(g.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!m.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(g.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,-1===t?e.length:t);return"/"!==n[n.length-1]&&(n+="/"),n+="negotiate",n+=-1===t?"":e.substring(t),-1===n.indexOf("negotiateVersion")&&(n+=-1===t?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}class X{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new K,this._transportResult=new K,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new K),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new K;const e=this._transportResult;this._transportResult=void 0;const t="string"==typeof this._buffer[0]?this._buffer.join(""):X._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(t){e.reject(t)}}}static _concatBuffers(e){const t=e.map((e=>e.byteLength)).reduce(((e,t)=>e+t)),n=new Uint8Array(t);let o=0;for(const t of e)n.set(new Uint8Array(t),o),o+=t.byteLength;return n.buffer}}class K{constructor(){this.promise=new Promise(((e,t)=>[this._resolver,this._rejecter]=[e,t]))}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class V{constructor(){this.name="json",this.version=1,this.transferFormat=q.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=p.instance);const n=R.parse(e),o=[];for(const e of n){const n=JSON.parse(e);if("number"!=typeof n.type)throw new Error("Invalid payload.");switch(n.type){case H.Invocation:this._isInvocationMessage(n);break;case H.StreamItem:this._isStreamItemMessage(n);break;case H.Completion:this._isCompletionMessage(n);break;case H.Ping:case H.Close:break;default:t.log(g.Information,"Unknown message type '"+n.type+"' ignored.");continue}o.push(n)}return o}writeMessage(e){return R.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Q={trace:g.Trace,debug:g.Debug,info:g.Information,information:g.Information,warn:g.Warning,warning:g.Warning,error:g.Error,critical:g.Critical,none:g.None};class Z{configureLogging(e){if(f.isRequired(e,"logging"),void 0!==e.log)this.logger=e;else if("string"==typeof e){const t=function(e){const t=Q[e.toLowerCase()];if(void 0!==t)return t;throw new Error(`Unknown log level: ${e}`)}(e);this.logger=new S(t)}else this.logger=new S(e);return this}withUrl(e,t){return f.isRequired(e,"url"),f.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return f.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new O(e):this.reconnectPolicy=e:this.reconnectPolicy=new O,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new J(this.url,e);return j.create(t,this.logger||p.instance,this.protocol||new V,this.reconnectPolicy)}}},296:(e,t,n)=>{n.r(t)},525:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{getBlock(e){const t={x:0,y:0,blockType:e,blocks:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]]};switch(e){case"I":t.blocks=[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]];break;case"J":t.blocks=[[0,0,0],[2,2,2],[0,0,2]];break;case"L":t.blocks=[[0,0,0],[3,3,3],[3,0,0]];break;case"O":t.blocks=[[0,0,0,0],[0,4,4,0],[0,4,4,0],[0,0,0,0]];break;case"S":t.blocks=[[0,0,0],[0,5,5],[5,5,0]];break;case"T":t.blocks=[[0,0,0],[6,6,6],[0,6,0]];break;case"Z":t.blocks=[[0,0,0],[7,7,0],[0,7,7]];break;default:throw new Error("Неизвестный тип фигур!")}return t.x=Math.floor((10-t.blocks[0].length)/2),t.y=-1,t}}},237:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=250},170:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(525)),r=o(n(237));t.default=class{constructor(e,t){this.playField=e,this.block=new s.default,this.soundService=t,this.points={1:40,2:100,3:300,4:1e3},this.score=0,this.lines=0,this.level=0,this.topOut=!1,this.playfieldBoard=this.createPlayfield(),this.activePiece=this.createPiece(),this.nextPiece=this.createPiece(),this.isClearing=!1,this.clearingLines=[]}getState(){const e=this.createPlayfield();for(let t=0;t<this.playfieldBoard.length;t+=1){e[t]=[];for(let n=0;n<this.playfieldBoard[t].length;n+=1)e[t][n]=this.playfieldBoard[t][n]}for(let t=0;t<this.activePiece.blocks.length;t+=1)for(let n=0;n<this.activePiece.blocks[t].length;n+=1)this.activePiece.blocks[t][n]&&(e[this.activePiece.y+t][this.activePiece.x+n]=this.activePiece.blocks[t][n]);return{playfieldBoard:e,score:this.score,lines:this.lines,nextPiece:this.nextPiece}}createPlayfield(){const e=[];for(let t=0;t<this.playField.playFieldSettings.rows;t+=1)e[t]=[],e[t]=new Array(this.playField.playFieldSettings.columns).fill(0);return e}createPiece(){const e="IJLOSTZ",t=e[Math.floor(Math.random()*e.length)];return this.block.getBlock(t)}movePieceLeft(){this.activePiece.x-=1,this.hasCollision()&&(this.activePiece.x+=1)}movePieceRight(){this.activePiece.x+=1,this.hasCollision()&&(this.activePiece.x-=1)}movePieceDown(){this.topOut||(this.activePiece.y+=1,this.hasCollision()&&(this.soundService.playHit(),this.clearingLines=[],this.activePiece.y-=1,this.lockPiece(),this.updatePieces(),this.updateScore(this.clearLines())),this.hasCollision()&&(this.topOut=!0))}rotatePiece(){const{blocks:e}=this.activePiece,{length:t}=e,n=[];for(let e=0;e<t;e+=1)n[e]=new Array(t).fill(0);for(let o=0;o<t;o+=1)for(let s=0;s<t;s+=1)n[s][o]=e[t-1-o][s];this.activePiece.blocks=n,this.hasCollision()&&(this.activePiece.blocks=e)}hasCollision(){const{x:e,y:t,blocks:n}=this.activePiece;for(let o=0;o<n.length;o+=1)for(let s=0;s<n[o].length;s+=1)if(n[o][s]&&(void 0===this.playfieldBoard[t+o]||void 0===this.playfieldBoard[t+o][e+s]||this.playfieldBoard[t+o][e+s]))return!0;return!1}lockPiece(){const e=this.activePiece.blocks;for(let t=0;t<e.length;t+=1)for(let n=0;n<e[t].length;n+=1)e[t][n]&&(this.playfieldBoard[this.activePiece.y+t][this.activePiece.x+n]=e[t][n])}clearLines(){const{rows:e,columns:t}=this.playField.playFieldSettings,n=[];for(let o=e-1;o>=0;o-=1){let e=0;for(let n=0;n<t;n+=1)this.playfieldBoard[o][n]&&(e+=1);if(0===e)break;e===t&&(this.isClearing||(this.isClearing=!0),n.unshift(o))}return this.clearingLines=n,setTimeout((()=>{this.clearingAnimation(n),this.isClearing=!1}),r.default),n.length}clearingAnimation(e){if(this.isClearing)for(const t of e)this.playfieldBoard.splice(t,1),this.playfieldBoard.unshift(new Array(this.playField.playFieldSettings.columns).fill(0))}updateScore(e){e>0&&(this.score+=this.points[e],this.lines+=e)}updatePieces(){this.activePiece=this.nextPiece,this.nextPiece=this.createPiece()}}},690:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t){this.gameContainer=e;const n=this.gameContainer.querySelector(".game__stats-container"),o=n.querySelector(".game__score"),s=n.querySelector(".game__lines"),r=n.querySelector(".game__level"),i=this.gameContainer.querySelector(".game__screen");this.playFieldSettings=t,this.width=t.width,this.height=t.height,this.playFieldBoard=i,this.blockWidth=this.width/t.columns,this.blockHeight=this.height/t.rows,this.scoreContainer=o,this.linesContainer=s,this.levelContainer=r,this.cells=[];for(let e=0;e<this.playFieldSettings.rows*this.playFieldSettings.columns;e+=1){const e=document.createElement("div");e.className="game__cell",e.style.width=`${this.blockWidth}px`,e.style.height=`${this.blockHeight}px`,this.cells.push(e),this.playFieldBoard.append(e)}}render(e){this.clearScreen(),this.renderPlayfield(e),this.renderPanel(e),this.gameContainer.querySelector(".game__next img").src=`../assets/images/next-${"IJLOSTZ".indexOf(e.nextPiece.blockType)+1}.png`}clearScreen(){this.cells.forEach((e=>{e.style.backgroundImage=""}))}renderPanel({score:e,lines:t}){this.scoreContainer.textContent=e,this.linesContainer.textContent=`Lines: ${t}`,this.levelContainer.textContent="Level: 1"}clearingEffect(e,t){for(let n=0;n<e.length;n+=1)for(let o=0;o<this.playFieldSettings.columns;o+=1){const s=this.cells[e[n]*this.playFieldSettings.columns+o];t?s.classList.contains("effect")||s.classList.add("effect"):s.classList.remove("effect")}}renderPlayfield({playfieldBoard:e}){for(let t=0;t<e.length;t+=1){const n=e[t];for(let e=0;e<n.length;e+=1){const o=n[e];o&&(this.cells[t*this.playFieldSettings.columns+e].style.backgroundImage=`url('./assets/images/figure-classic_${o}.png')`)}}}}},801:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(170)),r=o(n(690)),i=o(n(520));t.default=class{constructor(e,t,n=null){this.pageContainer=e,this.gameContainer=t,this.isGameOver=!1,this.hubConnection=n,this.playFieldSettings={width:300,height:600,columns:10,rows:20},this.soundService=new i.default,this.playField=new r.default(this.gameContainer,this.playFieldSettings),this.gameController=new s.default(this.playField,this.soundService),this.moveDown=()=>{},this.canPlay=!1}createPlayField(){let e,t=!1,n=3;const o=()=>{e&&this.isGameOver&&(clearInterval(e),e=null)};this.moveDown=()=>{if(this.gameController.topOut&&!this.isGameOver&&(this.isGameOver=!0,t=!0,o(),t)){const e=this.pageContainer.querySelector(".win-screen");e.querySelector(".current-score").textContent=`Текущий счёт: ${this.gameController.score}`,e.querySelector(".record-score").textContent=`Рекордный счёт: ${this.gameController.score}`,e.classList.add("show")}this.gameController.movePieceDown(),this.gameController.isClearing&&(this.soundService.playLine(),this.gameController.playField.clearingEffect(this.gameController.clearingLines,!0),setTimeout((()=>{this.gameController.playField.clearingEffect(this.gameController.clearingLines,!1),this.gameController.playField.render(this.gameController.getState())}),250)),this.gameController.playField.render(this.gameController.getState())};const s=()=>{e||this.isGameOver||(e=setInterval((()=>{this.moveDown()}),1e3))},r=setInterval((()=>{const e=this.pageContainer.querySelector(".timer-overlay");n<=0&&(this.canPlay=!0,clearInterval(r),e.classList.add("hide"),s()),e.textContent=`${n}`,n-=1}),1e3);window.addEventListener("hashchange",(()=>{this.isGameOver=!0,o(),clearInterval(r)}))}create(){this.createPlayField()}}},303:function(e,t,n){var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function a(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}c((o=o.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=s(n(786));n(296);const i=s(n(674)),a=s(n(920)),c=s(n(635)),l=s(n(369)),h=s(n(490)),d=s(n(274)),u=document.querySelector(".page-container");localStorage.getItem("connection-guid")||localStorage.setItem("connection-guid",r.default.newGuid());const g=()=>o(void 0,void 0,void 0,(function*(){const e=(e=>{if(console.log(e),e)switch(e.resource){case"/":return new l.default(u);case"/#modes":return new c.default(u);case"/#classic":return new i.default(u);case"/#multiplayer":return new d.default(u);case"/#login":return new h.default(u);default:return new a.default(u)}return new a.default(u)})((()=>{const e=document.location.pathname+document.location.hash;e.replace("/tetris/","/"),console.log(e);const t=e.substr(1).split("/");return{resource:`/${t[0]}`,id:t[1]}})());yield e.render()}));window.addEventListener("hashchange",g),window.addEventListener("load",g)},786:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{static newGuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}}},520:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(518)),r=o(n(477)),i=o(n(998));t.default=class{constructor(){this.bgAudio=new Audio(s.default),this.hitAudio=new Audio(r.default),this.lineAudio=new Audio(i.default)}playBackground(){this.bgAudio.volume=.5,this.bgAudio.play()}playHit(){this.bgAudio.volume=.5,this.hitAudio.play()}playLine(){this.lineAudio.volume=.5,this.hitAudio.play()}}},704:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SignalRHubUrl=t.FindEnemyUrl=t.ServerBaseUrl=void 0,t.ServerBaseUrl="https://tetriscloners.azurewebsites.net",t.FindEnemyUrl=`${t.ServerBaseUrl}/api/Game/FindEnemy`,t.SignalRHubUrl=`${t.ServerBaseUrl}/rooms`},500:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.pageContainer=e}}},674:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(801)),r=o(n(500));class i extends r.default{constructor(e){super(e),this.pageContainer=e}render(){this.pageContainer.innerHTML='<section class="classic-game-page">\n    <video autoplay muted loop>\n        <source src="assets/videos/tetris-bg3.mp4" type="video/mp4">\n    </video>\n\n    <div class="game-container">\n        <div class="game__stats-container">\n            <div class="game__score">0</div>\n            <div class="game__lines">0</div>\n            <div class="game__level">0</div>\n        </div>\n        <div class="game__screen"></div>\n        <div class="game__next">\n          <img>\n        </div>\n    </div>\n\n    <div class="win-screen">\n        <img class="win-logo" src="assets/svg/crown.svg"></img>\n        <div class="win-screen__wrapper">\n            <h1>ПОЗДРАВЛЯЕМ!</h1>\n            <p class="current-score">Текущий счёт: 00000</p>\n            <p class="record-score">Рекордный счёт: 00000</p>\n        </div>\n        <a href="" class="win-screen__button">Назад</a>\n    </div>\n\n    <div class="timer-overlay">3</div>\n    </section>\n    ';const e=new s.default(this.pageContainer,document.querySelector(".game-container"));var t,n;t=e.gameController,n={turnFigure:"ArrowUp",moveLeft:"ArrowLeft",moveRight:"ArrowRight",moveDown:"ArrowDown"},document.addEventListener("keydown",(o=>{if(e.canPlay)switch(o.code){case n.moveLeft:t.movePieceLeft(),t.playField.render(t.getState());break;case n.turnFigure:t.rotatePiece(),t.playField.render(t.getState());break;case n.moveRight:t.movePieceRight(),t.playField.render(t.getState());break;case n.moveDown:e.moveDown()}})),e.create()}}t.default=i},920:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(500));class r extends s.default{constructor(e){super(e)}render(){this.pageContainer.innerHTML='\n    <div class="error-container">\n      <h1>This page doesn\'t exist</h1>\n    </div>\n    '}}t.default=r},635:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(500));class r extends s.default{constructor(e){super(e)}render(){this.pageContainer.innerHTML='<section class="game-mode-page">\n        <video autoplay muted loop>\n            <source src="assets/videos/tetris-bg2.mp4" type="video/mp4">\n        </video>\n  \n        <div class="game-mode__card">\n            <div class="mode__name">\n                <img src="assets/svg/singleplayer.svg" class="mode__logo"></img>\n                ОДИНОЧНАЯ ИГРА\n            </div>\n  \n            <div class="game-mode__desc">\n                <img src="assets/svg/singleplayer_2.svg" class="desc__logo"></img>\n                <span>\n                    Сыграй в легендарный, классический Tetris, котрый вы знаете и любите!\n                </span>\n            </div>\n  \n            <a href="#classic" class="game-mode__play single-play">Играть</a>\n        </div>\n  \n        <div class="game-mode__card">\n            <div class="mode__name">\n                <img src="assets/svg/multiplayer.svg" class="mode__logo"></img>\n                СЕТЕВАЯ ИГРА\n            </div>\n  \n            <div class="game-mode__desc">\n                <img src="assets/svg/multiplayer_2.svg" class="desc__logo"></img>\n                <span>\n                    Сыграй в легендарный, классический Tetris, со своими друзьями!\n                </span>\n            </div>\n  \n            <a href="/#multiplayer" class="game-mode__play multi-play">Играть</a>\n        </div>\n    </section>'}}t.default=r},369:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(500));class r extends s.default{constructor(e){super(e),this.view='\n      <section class="main-page">\n        <video src="assets/videos/tetris-bg1.mp4" autoplay loop></video>\n\n        <header class="main-header">\n            <div class="player__name"><span class="player__level">1</span>Nickname</div>\n            <div class="player__coins"><span class="coin__logo"></span>0.0</div>\n        </header>\n\n        <div class="main-container">\n            <a href="#modes" class="main__play-btn">Играть</a>\n        </div>\n\n        <div class="main-menu">\n            <div class="main__logo"></div>\n            <ul class="menu__list">\n                <li class="menu__main"></li>\n                <li class="menu__shop"></li>\n                <li class="menu__themes"></li>\n                <li class="menu__settings"></li>\n            </ul>\n        </div>\n      </section>\n      '}render(){this.pageContainer.innerHTML=this.view}}t.default=r},490:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(500));class r extends s.default{constructor(e){super(e),document.createElement("section"),e.innerHTML='\n      <section class="login-section">\n        <div class="login-form" style="border: 1px solid black">\n          <input class="login-nickname" type="text" placeholder="NickName"></input>\n          <input class="login-password" type="text" placeholder="Password"></input>\n          <button class="login-btn" type="button">Войти</button>\n        </div>\n      </section>\n      ';const t=document.querySelector(".login-btn");null==t||t.addEventListener("click",(e=>{const t={email:document.querySelector(".login-nickname").value,password:document.querySelector(".login-password").value};console.log(t),fetch("http://localhost/api/AuthManagement/Login",{method:"POST",mode:"cors",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>e.json())).then((e=>{sessionStorage.setItem("token",e.token),document.location.href="http://localhost:8080/#multiplayer"}))}))}render(){this.pageContainer}}t.default=r},274:function(e,t,n){var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return s(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(n(801)),c=i(n(500)),l=r(n(208)),h=n(704);class d extends c.default{constructor(e){super(e),this.view='\n      <section class="main-page">\n        <video src="assets/videos/tetris-bg1.mp4" autoplay loop></video>\n\n        <header class="main-header">\n            <div class="player__name"><span class="player__level">1</span>Nickname</div>\n            <div class="player__coins"><span class="coin__logo"></span>0.0</div>\n        </header>\n\n        <div class="main-container">\n            <a href="#modes" class="main__play-btn">Играть</a>\n        </div>\n\n        <div class="main-menu">\n            <div class="main__logo"></div>\n            <ul class="menu__list">\n                <li class="menu__main"></li>\n                <li class="menu__shop"></li>\n                <li class="menu__themes"></li>\n                <li class="menu__settings"></li>\n            </ul>\n        </div>\n      </section>\n      '}findEnemy(){fetch(`${h.FindEnemyUrl}/?groupGuid=${localStorage.getItem("connection-guid")}`,{headers:{mode:"cors"}})}connectToSignalR(e,t){const n=(new l.HubConnectionBuilder).withUrl(h.SignalRHubUrl).build();return n.on("ReceiveGuidEnemy",(t=>{sessionStorage.setItem("enemy",t),e.create()})),n.on("EnemyGameStateUpdated",(e=>{t.playField.render(e)})),n.start().then((()=>{n.invoke("AddToGroup",localStorage.getItem("connection-guid")).then((()=>this.findEnemy())).catch((e=>document.write(e)))})),n}render(){this.pageContainer.innerHTML='<section class="classic-game-page">\n        <video autoplay muted loop>\n            <source src="assets/videos/tetris-bg3.mp4" type="video/mp4">\n        </video>\n    \n        <div class="game-container1">\n            <div class="game__stats-container">\n                <div class="game__score">0</div>\n                <div class="game__lines">0</div>\n                <div class="game__level">0</div>\n            </div>\n            <div class="game__screen"></div>\n            <div class="game__next">\n              <img>\n            </div>\n        </div>\n\n        <div class="game-container">\n            <div class="game__stats-container">\n                <div class="game__score">0</div>\n                <div class="game__lines">0</div>\n                <div class="game__level">0</div>\n            </div>\n            <div class="game__screen"></div>\n            <div class="game__next">\n              <img>\n            </div>\n        </div>\n    \n        <div class="win-screen">\n            <img class="win-logo" src="assets/svg/crown.svg"></img>\n            <div class="win-screen__wrapper">\n                <h1>ПОЗДРАВЛЯЕМ!</h1>\n                <p class="current-score">Текущий счёт: 00000</p>\n                <p class="record-score">Рекордный счёт: 00000</p>\n            </div>\n            <a href="" class="win-screen__button">Назад</a>\n        </div>\n        <div class="timer-overlay">3</div>\n        </section>\n        ';const e=new a.default(this.pageContainer,document.querySelector(".game-container")),t=new a.default(this.pageContainer,document.querySelector(".game-container1")),n=this.connectToSignalR(e,t);var o,s;o=e.gameController,s={turnFigure:"ArrowUp",moveLeft:"ArrowLeft",moveRight:"ArrowRight",moveDown:"ArrowDown"},document.addEventListener("keydown",(t=>{const r=e.gameController.getState();if(n.invoke("SendGameState",{PlayfieldBoard:r.playfieldBoard,Score:r.score,Lines:r.lines},sessionStorage.getItem("enemy")),e.canPlay)switch(t.code){case s.moveLeft:o.movePieceLeft(),o.playField.render(o.getState());break;case s.turnFigure:o.rotatePiece(),o.playField.render(o.getState());break;case s.moveRight:o.movePieceRight(),o.playField.render(o.getState());break;case s.moveDown:e.moveDown()}}))}}t.default=d},518:(e,t,n)=>{e.exports=n.p+"assets/sounds/background.wav"},477:(e,t,n)=>{e.exports=n.p+"assets/sounds/hit.wav"},998:(e,t,n)=>{e.exports=n.p+"assets/sounds/line.wav"}},t={};function n(o){var s=t[o];if(void 0!==s)return s.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e+"../"})(),n(303)})();